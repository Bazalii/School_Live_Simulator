<diagram program="umletino" version="14.3.0"><zoom_level>10</zoom_level><element><id>UMLClass</id><coordinates><x>580</x><y>809</y><w>600</w><h>499</h></coordinates><panel_attributes>bg=gray
*Game*
--
-difficulty_state: GameDifficultyState = NormalMode
-save_handlers: List&lt;function&gt;
-load_handlers: List&lt;function&gt;

-player: InGameWrapper
_-game: Game_
_+game_date: GameDate_
_+game_status: GameStatus_

--
_+init()_
_+tick()_

_+checkDefeat(school_performance: int, happiness: int, satiety: int)_
_+isActAvaliable(): boolean_

_+registerSaveHandler(handler: function)_
_+registerLoadHandler(handler: function)_

_+save()_
_+load()_

--
Responsibilities
-- Предоставить API управления сложностью игры
-- Предоставить API сохранения игры</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLInterface</id><coordinates><x>2069</x><y>429</y><w>320</w><h>150</h></coordinates><panel_attributes>bg=yellow
*Interface*

/TimeObservable/
--
setTickSignalHandler(handler: function, tickDellay: Int = 1)
setEndSignalHandler(handler: function)
</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>779</x><y>300</y><w>469</w><h>419</h></coordinates><panel_attributes>bg=light_gray
data class
*GameDate*
--
-timers: List&lt;Timer&gt;
-alarm_clocks: List&lt;AlarmClock&gt;
-time_dependencies: List&lt;function&gt;

-day: int = 1
-month: int = 9
-year: int = 2009

--
+tick()

+toString(): String
+rigisterAlarmClock(clock: AlarmClock)
+rigisterTimer(timer: Timer)
+rigisterTickHandler(handler: function)

--
Responsibilities
-- Предоставить API управления игровым временем
-- Предоставить интерфейсы обновления времени</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>680</x><y>1409</y><w>409</w><h>160</h></coordinates><panel_attributes>bg=orange
&lt;&lt;abstract class&gt;&gt;
/*GameDifficultState*/
--

--
+checkDefeat()
--
*Responsibilities*
-- Предоставить абстракцию для проверки
проигрыша при заданном уровне сложности















</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>439</x><y>719</y><w>160</w><h>110</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>10;10;140;90</additional_attributes></element><element><id>UMLClass</id><coordinates><x>350</x><y>1629</y><w>409</w><h>199</h></coordinates><panel_attributes>bg=gray
*NormalMode*
--

--
-checkDefeat()
--
*Responsibilities*
-- Предоставить абстракцию для проверки
проигрыша при заданном уровне сложности













</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>999</x><y>1629</y><w>409</w><h>199</h></coordinates><panel_attributes>bg=gray
*HardMode*
--

--
-checkDefeat()
--
*Responsibilities*
-- Предоставить абстракцию для проверки
проигрыша при заданном уровне сложности













</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>540</x><y>1559</y><w>160</w><h>90</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>140;10;10;70</additional_attributes></element><element><id>Relation</id><coordinates><x>1080</x><y>1559</y><w>150</w><h>90</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>10;10;130;70</additional_attributes></element><element><id>UMLUseCase</id><coordinates><x>1260</x><y>1040</y><w>150</w><h>59</h></coordinates><panel_attributes>lt=.
*InGameWrapper*
fg=red
bg=yellow</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>1170</x><y>1060</y><w>110</w><h>30</h></coordinates><panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-</panel_attributes><additional_attributes>10;10;90;10</additional_attributes></element><element><id>UMLClass</id><coordinates><x>1360</x><y>670</y><w>610</w><h>300</h></coordinates><panel_attributes>bg=light_gray
/*Timer*/
--
-days: int
-tick_signal_handler: function
-end_signal_handler: function

-
+tick()

+setTickSignalHandler(handler: function, tickDellay: Int = 1)
+setEndSignalHandler(handler: function)
-
*Responsibilities*
-- Предоставить интерфейс отсчета игрового времени
















</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>1240</x><y>630</y><w>140</w><h>180</h></coordinates><panel_attributes>lt=&lt;&lt;.</panel_attributes><additional_attributes>10;10;120;160</additional_attributes></element><element><id>UMLClass</id><coordinates><x>1380</x><y>0</y><w>610</w><h>350</h></coordinates><panel_attributes>bg=light_gray
/*AlarmClock*/
--
-day: int
-month: int
-year: int
-tick_signal_handler: function
-end_signal_handler: function
-tick_delay: Int = 1
-tick_counter: Int = 0
-
+update(day: int, month: int, year:int)

+setTickSignalHandler(handler: function, tick_delay: Int = 1)
+setEndSignalHandler(handler: function)
-
*Responsibilities*
-- Предоставить интерфейс отсчета игрового времени
















</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLInterface</id><coordinates><x>229</x><y>610</y><w>360</w><h>120</h></coordinates><panel_attributes>bg=yellow
*Interface*

/LiveObserver/
--
checkLosing(schoolPerformance: int, happiness: int, satiety: int)</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>1979</x><y>170</y><w>190</w><h>350</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>170;330;10;10</additional_attributes></element><element><id>Relation</id><coordinates><x>1959</x><y>570</y><w>210</w><h>270</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>190;10;10;250</additional_attributes></element><element><id>Relation</id><coordinates><x>1240</x><y>140</y><w>160</w><h>230</h></coordinates><panel_attributes>lt=&lt;&lt;.</panel_attributes><additional_attributes>10;210;140;10</additional_attributes></element><element><id>Relation</id><coordinates><x>959</x><y>709</y><w>30</w><h>120</h></coordinates><panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-</panel_attributes><additional_attributes>10;100;10;10</additional_attributes></element><element><id>UMLNote</id><coordinates><x>2029</x><y>799</y><w>530</w><h>160</h></coordinates><panel_attributes>*Note*
bg=blue
Взаимодействие с таймером:
1)Создание таймера
2)Конфигурация таймера 
(а так же указание обработчиков событий таймера)
3)"Запуск" таймера (постановка таймера на учет времени).
Тоесть передача таймера объекту,
который следит за всем временем в игре.
</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLNote</id><coordinates><x>0</x><y>789</y><w>530</w><h>160</h></coordinates><panel_attributes>*Note*
bg=blue
Ограничения игры будут задаваться не програмными, а
аппаратными средствами (с помощью блокирации
кнопок/виджетов)</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>869</x><y>1300</y><w>50</w><h>130</h></coordinates><panel_attributes>lt=&lt;&lt;&lt;&lt;-
state</panel_attributes><additional_attributes>10;10;10;110</additional_attributes></element><element><id>UMLClass</id><coordinates><x>1290</x><y>1210</y><w>160</w><h>99</h></coordinates><panel_attributes>bg=light_gray
&lt;&lt;enumeration&gt;&gt;
*GameStatus*
--
STOPPED
RUNNING

















</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>1170</x><y>1200</y><w>140</w><h>90</h></coordinates><panel_attributes>lt=&lt;.</panel_attributes><additional_attributes>120;62;10;10</additional_attributes></element></diagram>