<diagram program="umletino" version="14.3.0"><zoom_level>10</zoom_level><help_text>// Uncomment the following line to change the fontsize and font:
// fontsize=14
// fontfamily=SansSerif //possible: SansSerif,Serif,Monospaced


//////////////////////////////////////////////////////////////////////////////////////////////
// Welcome to UMLet!
//
// Double-click on elements to add them to the diagram, or to copy them
// Edit elements by modifying the text in this panel
// Hold Ctrl to select multiple elements
// Use Ctrl+mouse to select via lasso
//
// Use +/- or Ctrl+mouse wheel to zoom
// Drag a whole relation at its central square icon
//
// Press Ctrl+C to copy the whole diagram to the system clipboard (then just paste it to, eg, Word)
// Edit the files in the "palettes" directory to create your own element palettes
//
// Select "Custom Elements &gt; New..." to create new element types
//////////////////////////////////////////////////////////////////////////////////////////////

// This text will be stored with each diagram;  use it for notes.</help_text><element><id>UMLClass</id><coordinates><x>1340</x><y>830</y><w>560</w><h>1260</h></coordinates><panel_attributes>bg=light_gray
*Player*
--
-achieved_achievements: List&lt;GameAchievements&gt;

-name: String
-school_performance: int = 1000
-happiness: int = 1000
-satiety: int = 1000
-money: int = 100

-school_class: int = 1

-items: Bag
-current_courses: Courses

-player_state: PlayerState = NormalState
-live_observers: List&lt;LiveObserver&gt;

--
+tick()

+getClass(): int

+playSong(song: Song)
+deliver(delivery_type: Delivery)
+realiseWebTask(web_task: WebTask)

+eat(food: Food)

+addSchoolPerformance(val: int)
+addPercentSchoolPerformance(val: int)
+reduceSchoolPerformance(val: int)

+addHappiness(val: int)
+addPercentHappiness(val: int)
+reduceHappiness(val: int)

+addSatiety(val: int)
+addPercentSatiety(val: int)
+reduceSatiety(val: int)

+addMoney(val: int)
+reduceMoney(val: int)

-changePlayerState(state: PlayerState)

+registerObserver(Observer o)
+removeObserver(Observer o)
+notifyObservers()

+buyNewBicycle()
+buyNewGuitar()
+buyNewComputer()

--
*Responsibilities*
-- Предоставить интерфейс изменения стат.
-- Предоставить интерфейс ограничения стат.
-- Сигнализировать о ситуациях влияющих на ход игры.















</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLInterface</id><coordinates><x>860</x><y>2130</y><w>240</w><h>150</h></coordinates><panel_attributes>bg=yellow
*Interface*

/LiveObservable/
--
registerLiveObserver(observer: Observer)
removeLiveObserver(observer: Observer)
notifyLiveObservers()</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>1990</x><y>2180</y><w>410</w><h>200</h></coordinates><panel_attributes>bg=orange
/*PlayerState*/
--
#reduce_school_performance_percent: int
#reduce_happiness_percent: int
#reduce_satiety_percent: int

--

--
*Responsibilities*
-- Предоставить абстракцию для системного
изменения значений уменьшения стат.















</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>1740</x><y>2480</y><w>410</w><h>200</h></coordinates><panel_attributes>bg=gray
*NormalState*
--
#reduce_school_performance_percent: int
#reduce_happiness_percent: int
#reduce_satiety_percent: int

--

--
*Responsibilities*
-- Предоставить значения для уменьшения стат
при нормальных значениях стат.















</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>2190</x><y>2480</y><w>410</w><h>200</h></coordinates><panel_attributes>bg=gray
*BadState*
--
#reduce_school_performance_percent: int
#reduce_happiness_percent: int
#reduce_satiety_percent: int

--

--
*Responsibilities*
-- Предоставить значения для уменьшения стат
при значениях стат близких к 25%.















</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>2630</x><y>2480</y><w>410</w><h>200</h></coordinates><panel_attributes>bg=gray
*ExtremeState*
--
#reduce_school_performance_percent: int
#reduce_happiness_percent: int
#reduce_satiety_percent: int

--

--
*Responsibilities*
-- Предоставить значения для уменьшения стат
при значениях стат близких к 5%.















</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>2190</x><y>2370</y><w>220</w><h>130</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>10;10;200;110</additional_attributes></element><element><id>Relation</id><coordinates><x>2390</x><y>2370</y><w>460</w><h>130</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>10;10;440;110</additional_attributes></element><element><id>Relation</id><coordinates><x>1930</x><y>2370</y><w>80</w><h>130</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>60;10;10;110</additional_attributes></element><element><id>UMLClass</id><coordinates><x>2090</x><y>1950</y><w>320</w><h>160</h></coordinates><panel_attributes>bg=light_gray
&lt;&lt;enumeration&gt;&gt;
*Food*
--
CRACKERS(25, 5, 10)
DOSHIRAK(50, -10, 50)
EATERY_FOOD(120, -15, 300)
MCDONALDS(200, -20, 1000)
PIZZA_AT_HOME(450, +5, 4000)
RESTORANT_FOOD(800, +50, 10000)

















</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLUseCase</id><coordinates><x>1300</x><y>2150</y><w>120</w><h>40</h></coordinates><panel_attributes>lt=-
*Things*
fg=red
bg=yellow</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>1360</x><y>2080</y><w>60</w><h>90</h></coordinates><panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-</panel_attributes><additional_attributes>40;10;10;70</additional_attributes></element><element><id>Relation</id><coordinates><x>1280</x><y>2170</y><w>100</w><h>110</h></coordinates><panel_attributes>lt=&lt;.</panel_attributes><additional_attributes>10;90;80;15</additional_attributes></element><element><id>Relation</id><coordinates><x>1890</x><y>1850</y><w>220</w><h>190</h></coordinates><panel_attributes>lt=&lt;.</panel_attributes><additional_attributes>200;170;10;10</additional_attributes></element><element><id>UMLClass</id><coordinates><x>1380</x><y>230</y><w>460</w><h>280</h></coordinates><panel_attributes>bg=orange
&lt;&lt;abstract class&gt;&gt;
/*StudyCourseState*/
--
#price: int

-
+buyNextCourse(courses: Player.Courses)
+timerTickHandler()
+timerEndHandler()

--
*Responsibilities*
-- Предоставить абстракцию для системaтического
контроля обучающих курсов.















</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>1980</x><y>360</y><w>470</w><h>300</h></coordinates><panel_attributes>bg=orange
&lt;&lt;abstract class&gt;&gt;
/*ComputerCourseState*/
--
#price: int
#avalibale_web_tasks: List&lt;WebTask&gt;

-
+buyNextCourse(courses: Player.Courses)
+isAvailable(task: WebTask): bool
+timerTickHandler()
+timerEndHandler()

--
*Responsibilities*
-- Предоставить абстракцию для системaтического
контроля обучающих курсов по WEB.















</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>630</x><y>410</y><w>470</w><h>280</h></coordinates><panel_attributes>bg=orange
&lt;&lt;abstract class&gt;&gt;
/*GuitarCourseState*/
--
#price: int
#available_playlist: List&lt;Song&gt;

-
+buyNextCourse(courses: Player.Courses)
+isAvailable(song: Song): bool
+timerTickHandler()
+timerEndHandler()

--
*Responsibilities*
-- Предоставить абстракцию для системaтического
контроля обучающих курсов по гитаре.















</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>1090</x><y>220</y><w>310</w><h>250</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>290;10;10;230</additional_attributes></element><element><id>Relation</id><coordinates><x>1830</x><y>220</y><w>170</w><h>200</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>10;10;150;180</additional_attributes></element><element><id>Relation</id><coordinates><x>1600</x><y>130</y><w>30</w><h>120</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>10;10;10;100</additional_attributes></element><element><id>UMLInterface</id><coordinates><x>1560</x><y>0</y><w>120</w><h>130</h></coordinates><panel_attributes>bg=yellow
*Interface*

/TimerObserver/
--
timerTickHandler()
timerEndHandler()</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>90</x><y>420</y><w>470</w><h>180</h></coordinates><panel_attributes>bg=light_gray
/*NullGuitarCourseState*/
--
#price: int = 0
#available_playlist: List&lt;Song&gt;

-
+buyNextCourse(courses: Player.Courses)
+isAvailable(song: Song): bool
+timerTickHandler()
+timerEndHandler()













</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>90</x><y>620</y><w>470</w><h>180</h></coordinates><panel_attributes>bg=light_gray
/*FirstSongCourseState*/
--
#price: int = 0
#available_playlist: List&lt;Song&gt;

-
+buyNextCourse(courses: Player.Courses)
+isAvailable(song: Song): bool
+timerTickHandler()
+timerEndHandler()














</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>90</x><y>820</y><w>470</w><h>180</h></coordinates><panel_attributes>bg=light_gray
/*YardSongCourseState*/
--
#price: int = 0
#available_playlist: List&lt;Song&gt;

-
+buyNextCourse(courses: Player.Courses)
+isAvailable(song: Song): bool
+timerTickHandler()
+timerEndHandler()















</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>90</x><y>1020</y><w>470</w><h>180</h></coordinates><panel_attributes>bg=light_gray
/*MusicalSchoolCourseState*/
--
#price: int = 0
#available_playlist: List&lt;Song&gt;

-
+buyNextCourse(courses: Player.Courses)
+isAvailable(song: Song): bool
+timerTickHandler()
+timerEndHandler()















</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>90</x><y>1220</y><w>470</w><h>180</h></coordinates><panel_attributes>bg=light_gray
/*MusicalObservatoryCourseState*/
--
#price: int = 0
#available_playlist: List&lt;Song&gt;

-
+buyNextCourse(courses: Player.Courses)
+isAvailable(song: Song): bool
+timerTickHandler()
+timerEndHandler()















</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>2090</x><y>1550</y><w>390</w><h>90</h></coordinates><panel_attributes>bg=light_gray
DataClass
/*Courses*/
--
+guitar_course: GuitarCourseState= NullGuitarCourseState
+computer_course: ComputerCourseState = NullComputerCourseState
















</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>2520</x><y>390</y><w>470</w><h>180</h></coordinates><panel_attributes>bg=light_gray
/*OnlineWorkCourseState*/
--
#price: int
#avalibale_web_tasks: List&lt;WebTask&gt;

-
+buyNextCourse(courses: Player.Courses)
+isAvailable(task: WebTask): bool
+timerTickHandler()
+timerEndHandler()
















</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>2520</x><y>790</y><w>470</w><h>180</h></coordinates><panel_attributes>bg=light_gray
/*VidioEditingCourseState*/
--
#price: int
#avalibale_web_tasks: List&lt;WebTask&gt;

-
+buyNextCourse(courses: Player.Courses)
+isAvailable(task: WebTask): bool
+timerTickHandler()
+timerEndHandler()
















</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>2520</x><y>990</y><w>470</w><h>180</h></coordinates><panel_attributes>bg=light_gray
/*GameDevelopmentCourseState*/
--
#price: int
#avalibale_web_tasks: List&lt;WebTask&gt;

-
+buyNextCourse(courses: Player.Courses)
+isAvailable(task: WebTask): bool
+timerTickHandler()
+timerEndHandler()















</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>2520</x><y>590</y><w>470</w><h>180</h></coordinates><panel_attributes>bg=light_gray
/*WebDesignCourseState*/
--
#price: int
#avalibale_web_tasks: List&lt;WebTask&gt;

-
+buyNextCourse(courses: Player.Courses)
+isAvailable(task: WebTask): bool
+timerTickHandler()
+timerEndHandler()
















</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLNote</id><coordinates><x>610</x><y>770</y><w>620</w><h>450</h></coordinates><panel_attributes>*Note*
bg=blue
Способ реализации допустимых песен для каждого курса:

avalibalePlayList - лист с названиями гитар,которые
возможно купить после прохождения данного курса.

avalibalePlayList - ПУСТОЙ лист, который заполняется при
прохождении данного курса(внутри метода timerSignalHandler()).

override fun canPlaySong(song: Song): Boolean {
        return song in possibleSongs || super.canPlaySong(song)
    }

-
П.С. по схожему принципу реализуются допустимые 
работы, производимые на компьютере

ВНИМАНИЕ!!! avalibalePlayList/avalibaleGutarsList и ему
аналогичные листы несут одинаковый смысл, но разное
временное объявление.
К примеру: в классе GuitarState(и его наследниках)
avalibalePlayList объявляется по дефолту, а в классе
GuitarCourse(и его наследниках) avalibalePlayList заполняется
внутри метода timerSignalHandler()(обработчика завершонного
состояния timer)</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>310</x><y>320</y><w>580</w><h>120</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>560;90;560;10;10;10;10;100</additional_attributes></element><element><id>Relation</id><coordinates><x>20</x><y>560</y><w>90</w><h>130</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>70;10;10;10;10;110;70;110</additional_attributes></element><element><id>Relation</id><coordinates><x>20</x><y>760</y><w>90</w><h>130</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>70;10;10;10;10;110;70;110</additional_attributes></element><element><id>Relation</id><coordinates><x>20</x><y>960</y><w>90</w><h>130</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>70;10;10;10;10;110;70;110</additional_attributes></element><element><id>Relation</id><coordinates><x>20</x><y>1160</y><w>90</w><h>130</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>70;10;10;10;10;110;70;110</additional_attributes></element><element><id>Relation</id><coordinates><x>2210</x><y>270</y><w>330</w><h>110</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>10;90;50;10;310;10</additional_attributes></element><element><id>Relation</id><coordinates><x>2980</x><y>330</y><w>90</w><h>130</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>10;10;70;10;70;110;10;110</additional_attributes></element><element><id>Relation</id><coordinates><x>2980</x><y>530</y><w>90</w><h>130</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>10;10;70;10;70;110;10;110</additional_attributes></element><element><id>Relation</id><coordinates><x>2980</x><y>730</y><w>90</w><h>130</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>10;10;70;10;70;110;10;110</additional_attributes></element><element><id>Relation</id><coordinates><x>2980</x><y>930</y><w>90</w><h>130</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>10;10;70;10;70;110;10;110</additional_attributes></element><element><id>UMLClass</id><coordinates><x>1370</x><y>600</y><w>200</w><h>160</h></coordinates><panel_attributes>bg=light_gray
&lt;&lt;enumeration&gt;&gt;
*Song*
--
SINGLE_CHORD(100)
GAZ_SECTOR(500)
SMELLS_LIKE(1000)
JAZZ(2500)
BAXA(5000)
















</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>990</x><y>1970</y><w>370</w><h>190</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>10;170;350;10</additional_attributes></element><element><id>UMLUseCase</id><coordinates><x>1210</x><y>2260</y><w>120</w><h>40</h></coordinates><panel_attributes>lt=.
enum
*Delivery*
fg=red
bg=yellow</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>1670</x><y>600</y><w>190</w><h>160</h></coordinates><panel_attributes>bg=light_gray
&lt;&lt;enumeration&gt;&gt;
*WebTask*
--
ACCOUNT_BOOST(100)
PUBLIC_PR(500)
MAKE_FRONTEND(2000)
VIDEO_EDITING(5000)
MAKE_A_GAME(15000)
















</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>1760</x><y>750</y><w>30</w><h>100</h></coordinates><panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-</panel_attributes><additional_attributes>10;80;10;10</additional_attributes></element><element><id>Relation</id><coordinates><x>1460</x><y>750</y><w>30</w><h>100</h></coordinates><panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-</panel_attributes><additional_attributes>10;80;10;10</additional_attributes></element><element><id>Relation</id><coordinates><x>1090</x><y>600</y><w>270</w><h>250</h></coordinates><panel_attributes>lt=&lt;&lt;&lt;&lt;-
state</panel_attributes><additional_attributes>250;230;10;10</additional_attributes></element><element><id>Relation</id><coordinates><x>1890</x><y>550</y><w>110</w><h>300</h></coordinates><panel_attributes>lt=&lt;&lt;&lt;&lt;-
state</panel_attributes><additional_attributes>10;280;90;10</additional_attributes></element><element><id>Relation</id><coordinates><x>1760</x><y>2080</y><w>250</w><h>120</h></coordinates><panel_attributes>lt=&lt;&lt;&lt;&lt;-
state</panel_attributes><additional_attributes>10;10;230;100</additional_attributes></element><element><id>UMLClass</id><coordinates><x>2550</x><y>2050</y><w>470</w><h>130</h></coordinates><panel_attributes>bg=light_gray
*MacbookState*
--
#price: int = 200000
#available_courses: List&lt;String&gt;
-owner: Player
-
+changeState(bag: Player.Bag)
+isAvailable(course_name: String): boolean
















</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>2550</x><y>1760</y><w>470</w><h>120</h></coordinates><panel_attributes>bg=light_gray
*UsualComputerState*
--
#price: int = 30000
#available_courses: List&lt;String&gt;
-owner: Player
-
+changeState(bag: Player.Bag)
+isAvailable(course_name: String): boolean
















</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>2550</x><y>1900</y><w>470</w><h>130</h></coordinates><panel_attributes>bg=light_gray
*XiaomiMiNotebookState*
--
#price: int = 60000
#available_courses: List&lt;String&gt;
-owner: Player
-
+changeState(bag: Player.Bag)
+isAvailable(course_name: String): boolean
















</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>2550</x><y>1620</y><w>470</w><h>120</h></coordinates><panel_attributes>bg=light_gray
*OldComputerState*
--
#price: int = 10000
#available_courses: List&lt;String&gt;
-owner: Player
-
+changeState(bag: Player.Bag)
+isAvailable(course_name: String): boolean
















</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>2550</x><y>1480</y><w>470</w><h>120</h></coordinates><panel_attributes>bg=light_gray
*PreviouslyUsedComputerState*
--
#price: int = 3000
#available_courses: List&lt;String&gt;
-owner: Player
-
+changeState(bag: Player.Bag)
+isAvailable(course_name: String): boolean
















</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>2550</x><y>1320</y><w>470</w><h>140</h></coordinates><panel_attributes>bg=light_gray
/*NullComputerState*/
--
#price: int = 0
#available_courses: List&lt;String&gt;
-owner: Player
-
+changeState(bag: Player.Bag)
+isAvailable(course_name: String): boolean
















</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>1990</x><y>1240</y><w>470</w><h>220</h></coordinates><panel_attributes>bg=orange
&lt;&lt;abstract class&gt;&gt;
/*ComputerState*/
--
#price: int
#available_courses: List&lt;String&gt;

-
+changeState(bag: Player.Bag)
+isAvailable(course_name: String): boolean

--
*Responsibilities*
-- Предоставить абстракцию для системного
контроля компьютеров и их возможностей.















</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>2450</x><y>1380</y><w>120</w><h>30</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>10;10;100;10</additional_attributes></element><element><id>Relation</id><coordinates><x>3010</x><y>1400</y><w>100</w><h>130</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>10;10;80;10;80;110;10;110</additional_attributes></element><element><id>Relation</id><coordinates><x>3010</x><y>1540</y><w>100</w><h>130</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>10;10;80;10;80;110;10;110</additional_attributes></element><element><id>Relation</id><coordinates><x>3010</x><y>1680</y><w>100</w><h>130</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>10;10;80;10;80;110;10;110</additional_attributes></element><element><id>Relation</id><coordinates><x>3010</x><y>1820</y><w>100</w><h>130</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>10;10;80;10;80;110;10;110</additional_attributes></element><element><id>Relation</id><coordinates><x>3010</x><y>1970</y><w>100</w><h>130</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>10;10;80;10;80;110;10;110</additional_attributes></element><element><id>Relation</id><coordinates><x>1890</x><y>1330</y><w>120</w><h>40</h></coordinates><panel_attributes>lt=&lt;&lt;&lt;&lt;-
state</panel_attributes><additional_attributes>10;20;100;20</additional_attributes></element><element><id>UMLClass</id><coordinates><x>620</x><y>1630</y><w>600</w><h>240</h></coordinates><panel_attributes>bg=orange
&lt;&lt;abstract class&gt;&gt;
/*GuitarState*/
--
#price: int
#available_courses: List&lt;String&gt;
+owner: Player

-
+changeState(bag: Player.Bag)
+isAvailable(courseName: String): boolean

--
*Responsibilities*
-- Предоставить абстракцию для системного
контроля гитар и их возможностей.















</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>100</x><y>2060</y><w>460</w><h>130</h></coordinates><panel_attributes>bg=light_gray
*UssrGuitarState*
--
#price: int = 1000
#available_courses: List&lt;String&gt;
-owner: Player
-
+changeState(bag: Player.Bag)
+isAvailable(courseName: String): boolean















</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>100</x><y>1450</y><w>460</w><h>130</h></coordinates><panel_attributes>bg=light_gray
*DualNeckGuitarState*
--
#price: int = 150000
#available_courses: List&lt;String&gt;
-owner: Player
-
+changeState(bag: Player.Bag)
+isAvailable(courseName: String): boolean
















</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>100</x><y>1910</y><w>460</w><h>130</h></coordinates><panel_attributes>bg=light_gray
*UralGuitarState*
--
#price: int = 5000
#available_courses: List&lt;String&gt;
-owner: Player
-
+changeState(bag: Player.Bag)
+isAvailable(courseName: String): boolean
















</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>100</x><y>1600</y><w>460</w><h>130</h></coordinates><panel_attributes>bg=light_gray
*FenderGuitarState*
--
#price: int = 40000
#available_courses: List&lt;String&gt;
-owner: Player
-
+changeState(bag: Player.Bag)
+isAvailable(courseName: String): boolean
















</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>100</x><y>1760</y><w>460</w><h>130</h></coordinates><panel_attributes>bg=light_gray
*YamahaGuitarState*
--
#price: int = 12000
#available_courses: List&lt;String&gt;
-owner: Player
-
+changeState(bag: Player.Bag)
+isAvailable(courseName: String): boolean















</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>550</x><y>1860</y><w>390</w><h>440</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>370;10;270;240;10;420</additional_attributes></element><element><id>UMLClass</id><coordinates><x>100</x><y>2210</y><w>460</w><h>130</h></coordinates><panel_attributes>bg=light_gray
*NullGuitarState*
--
#price: int = 0
#available_courses: List&lt;String&gt;
-owner: Player
-
+changeState(bag: Player.Bag)
+isAvailable(courseName: String): boolean
















</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>0</x><y>2140</y><w>120</w><h>120</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>100;100;10;100;10;10;100;10</additional_attributes></element><element><id>Relation</id><coordinates><x>0</x><y>1990</y><w>120</w><h>120</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>100;100;10;100;10;10;100;10</additional_attributes></element><element><id>Relation</id><coordinates><x>0</x><y>1840</y><w>120</w><h>120</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>100;100;10;100;10;10;100;10</additional_attributes></element><element><id>Relation</id><coordinates><x>0</x><y>1690</y><w>120</w><h>120</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>100;100;10;100;10;10;100;10</additional_attributes></element><element><id>Relation</id><coordinates><x>0</x><y>1530</y><w>120</w><h>120</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>100;100;10;100;10;10;100;10</additional_attributes></element><element><id>UMLNote</id><coordinates><x>640</x><y>1270</y><w>550</w><h>320</h></coordinates><panel_attributes>*Note*
bg=blue
Способ реализации допустимых песен для каждой гитары:

avalibaleCoursesList - лист с названиями курсов(имен
классов функций), которые становятся возможными к
изучению после приобритения данного предмета (изменения
состояния предмета guitar).

avalibaleCoursesList - ОБЪЯВЛЕННЫЙ по дефолту лист.

-
П.С. по схожему принципу реализуются доставки(допустимые 
для существующей модели велосипеда) и работы(допустимые
для существующей модели компьютера).</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>1210</x><y>1700</y><w>150</w><h>80</h></coordinates><panel_attributes>lt=&lt;&lt;&lt;&lt;-
state</panel_attributes><additional_attributes>130;10;10;60</additional_attributes></element><element><id>UMLClass</id><coordinates><x>520</x><y>2650</y><w>570</w><h>130</h></coordinates><panel_attributes>bg=light_gray
*UsualBicycleState*
--
#price: int = 10000
#available_delivery: List&lt;Delivery&gt;

-
+changeState(bag: Player.Bag)
+isAvailable(delivery: Delivery): bool
















</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>940</x><y>2830</y><w>570</w><h>130</h></coordinates><panel_attributes>bg=light_gray
*UssrBicycleState*
--
#price: int = 2000
#available_delivery: List&lt;Delivery&gt;

-
+changeState(bag: Player.Bag)
+isAvailable(delivery: Delivery): bool















</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>210</x><y>2830</y><w>570</w><h>130</h></coordinates><panel_attributes>bg=light_gray
*MountainBicycleState*
--
#price: int = 40000
#available_delivery: List&lt;Delivery&gt;

-
+changeState(bag: Player.Bag)
+isAvailable(delivery: Delivery): bool
















</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>1140</x><y>2650</y><w>570</w><h>130</h></coordinates><panel_attributes>bg=light_gray
/*NullBicycleState*/
--
#price: int = 0
#available_delivery: List&lt;Delivery&gt;

-
+changeState(bag: Player.Bag)
+isAvailable(delivery: Delivery): bool















</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>930</x><y>2340</y><w>600</w><h>220</h></coordinates><panel_attributes>bg=orange
&lt;&lt;abstract class&gt;&gt;
/*BicycleState*/
--
#price: int
#available_delivery: List&lt;Delivery&gt;

-
+changeState(bag: Player.Bag)
+isAvailable(delivery: Delivery): bool

--
*Responsibilities*
-- Предоставить абстракцию для системного
контроля велосипедов и их возможностей.















</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>750</x><y>2450</y><w>200</w><h>80</h></coordinates><panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-</panel_attributes><additional_attributes>180;10;10;60</additional_attributes></element><element><id>UMLClass</id><coordinates><x>320</x><y>2430</y><w>440</w><h>160</h></coordinates><panel_attributes>bg=light_gray
&lt;&lt;enumeration&gt;&gt;
*Delivery*
--
SLOW_DELIVERY(100)
USUAL_DELIVERY(500)
FAST_DELIVERY(5000)
















</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>1500</x><y>2770</y><w>110</w><h>140</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>90;10;90;120;10;120</additional_attributes></element><element><id>Relation</id><coordinates><x>840</x><y>2770</y><w>120</w><h>140</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>100;120;10;120;10;10</additional_attributes></element><element><id>Relation</id><coordinates><x>400</x><y>2690</y><w>140</w><h>160</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>120;10;10;10;10;140</additional_attributes></element><element><id>Relation</id><coordinates><x>1310</x><y>2550</y><w>80</w><h>120</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>60;10;10;100</additional_attributes></element><element><id>Relation</id><coordinates><x>1470</x><y>2080</y><w>70</w><h>280</h></coordinates><panel_attributes>lt=&lt;&lt;&lt;&lt;-
state</panel_attributes><additional_attributes>50;10;10;260</additional_attributes></element><element><id>UMLNote</id><coordinates><x>1960</x><y>820</y><w>360</w><h>210</h></coordinates><panel_attributes>*Note*
bg=blue
Внутри метода buyNextItem()
необходимо определить и 
реализовать достижения, которые
происходят во время покупок.



-
см. раздел "Ачивки" 
п. "Ачивки за приобретения"</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLUseCase</id><coordinates><x>1680</x><y>2220</y><w>160</w><h>70</h></coordinates><panel_attributes>lt=-
&lt;&lt;abstract class&gt;&gt;
*Player*
fg=red
bg=yellow</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>1630</x><y>2080</y><w>100</w><h>170</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>80;150;10;10</additional_attributes></element><element><id>UMLClass</id><coordinates><x>2520</x><y>190</y><w>470</w><h>180</h></coordinates><panel_attributes>bg=light_gray
/*NullComputerCourseState*/
--
#price: int
#avalibale_web_tasks: List&lt;WebTask&gt;

-
+buyNextCourse(courses: Player.Courses)
+isAvailable(task: WebTask): bool
+timerTickHandler()
+timerEndHandler()














</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>1850</x><y>1590</y><w>260</w><h>170</h></coordinates><panel_attributes>lt=[inside]&lt;-
</panel_attributes><additional_attributes>30;10;240;150</additional_attributes></element><element><id>UMLClass</id><coordinates><x>2090</x><y>1670</y><w>390</w><h>90</h></coordinates><panel_attributes>bg=light_gray
DataClass
/*Bag*/
--
+bicycle: BicycleState = NullBicycleState
+guitar: GuitarState = NullGuitarState
+computer: ComputerState = NullComputerState
















</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>1850</x><y>1500</y><w>260</w><h>140</h></coordinates><panel_attributes>lt=[inside]&lt;-
</panel_attributes><additional_attributes>30;10;240;120</additional_attributes></element></diagram>