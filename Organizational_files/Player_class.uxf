<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<diagram program="umlet" version="14.3.0">
  <help_text>// Uncomment the following line to change the fontsize and font:
// fontsize=14
// fontfamily=SansSerif //possible: SansSerif,Serif,Monospaced


//////////////////////////////////////////////////////////////////////////////////////////////
// Welcome to UMLet!
//
// Double-click on elements to add them to the diagram, or to copy them
// Edit elements by modifying the text in this panel
// Hold Ctrl to select multiple elements
// Use Ctrl+mouse to select via lasso
//
// Use +/- or Ctrl+mouse wheel to zoom
// Drag a whole relation at its central square icon
//
// Press Ctrl+C to copy the whole diagram to the system clipboard (then just paste it to, eg, Word)
// Edit the files in the "palettes" directory to create your own element palettes
//
// Select "Custom Elements &gt; New..." to create new element types
//////////////////////////////////////////////////////////////////////////////////////////////

// This text will be stored with each diagram;  use it for notes.</help_text>
  <zoom_level>8</zoom_level>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1072</x>
      <y>664</y>
      <w>448</w>
      <h>1008</h>
    </coordinates>
    <panel_attributes>bg=light_gray
*Player*
--
-achieved_achievements: List&lt;GameAchievements&gt;

-name: String
-birthday: Birthday
-school_performance: int = 1000
-happiness: int = 1000
-satiety: int = 1000
-money: int = 100

-school_class: int = 1

-items: Bag
-current_courses: Courses

-player_state: PlayerState = NormalState
-live_observers: List&lt;LiveObserver&gt;

--
+tick()

+getClass(): int

+playSong(song: Song)
+deliver(delivery_type: Delivery)
+realiseWebTask(web_task: WebTask)

+eat(food: Food)

+addSchoolPerformance(val: int)
+addPercentSchoolPerformance(val: int)
+reduceSchoolPerformance(val: int)

+addHappiness(val: int)
+addPercentHappiness(val: int)
+reduceHappiness(val: int)

+addSatiety(val: int)
+addPercentSatiety(val: int)
+reduceSatiety(val: int)

+addMoney(val: int)
+reduceMoney(val: int)

-changePlayerState(state: PlayerState)

+registerObserver(Observer o)
+removeObserver(Observer o)
+notifyObservers()

+buyNewBicycle()
+buyNewGuitar()
+buyNextGuitarCourse()
+buyNewComputer()
+buyNextComputerCourse()

--
*Responsibilities*
-- Предоставить интерфейс изменения стат.
-- Предоставить интерфейс ограничения стат.
-- Сигнализировать о ситуациях влияющих на ход игры.















</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLInterface</id>
    <coordinates>
      <x>640</x>
      <y>1576</y>
      <w>224</w>
      <h>120</h>
    </coordinates>
    <panel_attributes>bg=yellow
*Interface*

/LiveObservable/
--
registerLiveObserver(observer: Observer)
removeLiveObserver(observer: Observer)
notifyLiveObservers()</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1504</x>
      <y>1776</y>
      <w>328</w>
      <h>176</h>
    </coordinates>
    <panel_attributes>bg=orange
/*PlayerState*/
--
#reduce_school_performance_percent: int
#reduce_happiness_percent: int
#reduce_satiety_percent: int

--
+getReduceSchoolPerformancePercent(): int
+getReduceHappinessPercent(): int
+getReduceSatietyPercent(): int

--
*Responsibilities*
-- Предоставить абстракцию для системного
изменения значений уменьшения стат.















</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1384</x>
      <y>2008</y>
      <w>328</w>
      <h>184</h>
    </coordinates>
    <panel_attributes>bg=gray
*NormalState*
--
#reduce_school_performance_percent: int
#reduce_happiness_percent: int
#reduce_satiety_percent: int

--
+getReduceSchoolPerformancePercent(): int
+getReduceHappinessPercent(): int
+getReduceSatietyPercent(): int

--
*Responsibilities*
-- Предоставить значения для уменьшения стат
при нормальных значениях стат.















</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1736</x>
      <y>2008</y>
      <w>328</w>
      <h>184</h>
    </coordinates>
    <panel_attributes>bg=gray
*BadState*
--
#reduce_school_performance_percent: int
#reduce_happiness_percent: int
#reduce_satiety_percent: int

--
+getReduceSchoolPerformancePercent(): int
+getReduceHappinessPercent(): int
+getReduceSatietyPercent(): int

--
*Responsibilities*
-- Предоставить значения для уменьшения стат
при значениях стат близких к 25%.















</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2088</x>
      <y>2008</y>
      <w>328</w>
      <h>184</h>
    </coordinates>
    <panel_attributes>bg=gray
*ExtremeState*
--
#reduce_school_performance_percent: int
#reduce_happiness_percent: int
#reduce_satiety_percent: int

--
+getReduceSchoolPerformancePercent(): int
+getReduceHappinessPercent(): int
+getReduceSatietyPercent(): int

--
*Responsibilities*
-- Предоставить значения для уменьшения стат
при значениях стат близких к 5%.















</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1752</x>
      <y>1944</y>
      <w>160</w>
      <h>80</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;180.0;80.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1824</x>
      <y>1944</y>
      <w>440</w>
      <h>80</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;530.0;80.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1536</x>
      <y>1944</y>
      <w>24</w>
      <h>80</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;80.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>792</x>
      <y>1712</y>
      <w>256</w>
      <h>128</h>
    </coordinates>
    <panel_attributes>bg=light_gray
&lt;&lt;enumeration&gt;&gt;
*Food*
--
CRACKERS(25, 5, 10)
DOSHIRAK(50, -10, 50)
EATERY_FOOD(120, -15, 300)
MCDONALDS(200, -20, 1000)
PIZZA_AT_HOME(450, +5, 4000)
RESTORANT_FOOD(800, +50, 10000)

















</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>904</x>
      <y>1664</y>
      <w>184</w>
      <h>64</h>
    </coordinates>
    <panel_attributes>lt=&lt;.</panel_attributes>
    <additional_attributes>10.0;60.0;210.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1104</x>
      <y>184</y>
      <w>368</w>
      <h>224</h>
    </coordinates>
    <panel_attributes>bg=orange
&lt;&lt;abstract class&gt;&gt;
/*StudyCourseState*/
--
#price: int

-
+getPrice(): int

+buyNextCourse(courses: Player.Courses)
+timerTickHandler()
+timerEndHandler()

--
*Responsibilities*
-- Предоставить абстракцию для системaтического
контроля обучающих курсов.















</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1584</x>
      <y>288</y>
      <w>376</w>
      <h>240</h>
    </coordinates>
    <panel_attributes>bg=orange
&lt;&lt;abstract class&gt;&gt;
/*ComputerCourseState*/
--
#price: int
#avalibale_web_tasks: List&lt;WebTask&gt;

-
+getPrice(): int

+buyNextCourse(courses: Player.Courses)
+isAvailable(task: WebTask): bool
+timerTickHandler()
+timerEndHandler()

--
*Responsibilities*
-- Предоставить абстракцию для системaтического
контроля обучающих курсов по WEB.















</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>504</x>
      <y>328</y>
      <w>376</w>
      <h>224</h>
    </coordinates>
    <panel_attributes>bg=orange
&lt;&lt;abstract class&gt;&gt;
/*GuitarCourseState*/
--
#price: int
#available_playlist: List&lt;Song&gt;

-
+getPrice(): int

+buyNextCourse(courses: Player.Courses)
+isAvailable(song: Song): bool
+timerTickHandler()
+timerEndHandler()

--
*Responsibilities*
-- Предоставить абстракцию для системaтического
контроля обучающих курсов по гитаре.















</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>872</x>
      <y>176</y>
      <w>248</w>
      <h>200</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>290.0;10.0;10.0;230.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1464</x>
      <y>176</y>
      <w>136</w>
      <h>160</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;150.0;180.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1280</x>
      <y>104</y>
      <w>24</w>
      <h>96</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;100.0</additional_attributes>
  </element>
  <element>
    <id>UMLInterface</id>
    <coordinates>
      <x>1240</x>
      <y>0</y>
      <w>112</w>
      <h>112</h>
    </coordinates>
    <panel_attributes>bg=yellow
*Interface*

/TimerObserver/
--
timerTickHandler()
timerEndHandler()</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>72</x>
      <y>224</y>
      <w>376</w>
      <h>144</h>
    </coordinates>
    <panel_attributes>bg=light_gray
/*NullGuitarCourseState*/
--
#price: int = 0
#available_playlist: List&lt;Song&gt;

-
+getPrice(): int

+buyNextCourse(courses: Player.Courses)
+isAvailable(song: Song): bool
+timerTickHandler()
+timerEndHandler()













</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>72</x>
      <y>384</y>
      <w>376</w>
      <h>144</h>
    </coordinates>
    <panel_attributes>bg=light_gray
/*FirstSongCourseState*/
--
#price: int = 0
#available_playlist: List&lt;Song&gt;

-
+getPrice(): int

+buyNextCourse(courses: Player.Courses)
+isAvailable(song: Song): bool
+timerTickHandler()
+timerEndHandler()














</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>72</x>
      <y>544</y>
      <w>376</w>
      <h>144</h>
    </coordinates>
    <panel_attributes>bg=light_gray
/*YardSongCourseState*/
--
#price: int = 0
#available_playlist: List&lt;Song&gt;

-
+getPrice(): int

+buyNextCourse(courses: Player.Courses)
+isAvailable(song: Song): bool
+timerTickHandler()
+timerEndHandler()















</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>72</x>
      <y>704</y>
      <w>376</w>
      <h>144</h>
    </coordinates>
    <panel_attributes>bg=light_gray
/*MusicalSchoolCourseState*/
--
#price: int = 0
#available_playlist: List&lt;Song&gt;

-
+getPrice(): int

+buyNextCourse(courses: Player.Courses)
+isAvailable(song: Song): bool
+timerTickHandler()
+timerEndHandler()















</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>72</x>
      <y>864</y>
      <w>376</w>
      <h>144</h>
    </coordinates>
    <panel_attributes>bg=light_gray
/*MusicalObservatoryCourseState*/
--
#price: int = 0
#available_playlist: List&lt;Song&gt;

-
+getPrice(): int

+buyNextCourse(courses: Player.Courses)
+isAvailable(song: Song): bool
+timerTickHandler()
+timerEndHandler()















</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1592</x>
      <y>1408</y>
      <w>408</w>
      <h>144</h>
    </coordinates>
    <panel_attributes>bg=light_gray
/*Courses*/
--
-guitar_course: GuitarCourseState= NullGuitarCourseState
-computer_course: ComputerCourseState = NullComputerCourseState

--
+getGuitarCourse(): GuitarCourseState
+getComputerCourse(): ComputerCourseState

+setGuitarCourse(guitar_course: GuitarCourseState)
+setComputerCourse(computer_course: ComputerCourseState)














</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2016</x>
      <y>312</y>
      <w>376</w>
      <h>144</h>
    </coordinates>
    <panel_attributes>bg=light_gray
/*OnlineWorkCourseState*/
--
#price: int
#avalibale_web_tasks: List&lt;WebTask&gt;

-
+getPrice(): int

+buyNextCourse(courses: Player.Courses)
+isAvailable(task: WebTask): bool
+timerTickHandler()
+timerEndHandler()
















</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2016</x>
      <y>632</y>
      <w>376</w>
      <h>144</h>
    </coordinates>
    <panel_attributes>bg=light_gray
/*VidioEditingCourseState*/
--
#price: int
#avalibale_web_tasks: List&lt;WebTask&gt;

-
+getPrice(): int

+buyNextCourse(courses: Player.Courses)
+isAvailable(task: WebTask): bool
+timerTickHandler()
+timerEndHandler()
















</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2016</x>
      <y>792</y>
      <w>376</w>
      <h>144</h>
    </coordinates>
    <panel_attributes>bg=light_gray
/*GameDevelopmentCourseState*/
--
#price: int
#avalibale_web_tasks: List&lt;WebTask&gt;

-
+getPrice(): int

+buyNextCourse(courses: Player.Courses)
+isAvailable(task: WebTask): bool
+timerTickHandler()
+timerEndHandler()















</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2016</x>
      <y>472</y>
      <w>376</w>
      <h>144</h>
    </coordinates>
    <panel_attributes>bg=light_gray
/*WebDesignCourseState*/
--
#price: int
#avalibale_web_tasks: List&lt;WebTask&gt;

-
+getPrice(): int

+buyNextCourse(courses: Player.Courses)
+isAvailable(task: WebTask): bool
+timerTickHandler()
+timerEndHandler()
















</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>488</x>
      <y>616</y>
      <w>496</w>
      <h>360</h>
    </coordinates>
    <panel_attributes>*Note*
bg=blue
Способ реализации допустимых песен для каждого курса:

available_playlist - лист с названиями гитар, которые
возможно купить после прохождения данного курса.

available_playlist - ПУСТОЙ лист, который заполняется при
прохождении данного курса(внутри метода timerSignalHandler()).

override fun canPlaySong(song: Song): Boolean {
        return song in possibleSongs || super.isAvailable(song)
    }

-
П.С. по схожему принципу реализуются допустимые 
работы, производимые на компьютере

ВНИМАНИЕ!!! available_playlist/available_courses и ему
аналогичные листы несут одинаковый смысл, но разное
временное объявление.
К примеру: в классе GuitarState(и его наследниках)
available_courses объявляется по дефолту, а в классе
GuitarCourse(и его наследниках) available_playlist заполняется
внутри метода timerSignalHandler()(обработчика завершённого
состояния timer)</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>440</x>
      <y>256</y>
      <w>272</w>
      <h>88</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>320.0;90.0;320.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>16</x>
      <y>336</y>
      <w>72</w>
      <h>104</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>70.0;10.0;10.0;10.0;10.0;110.0;70.0;110.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>16</x>
      <y>496</y>
      <w>72</w>
      <h>104</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>70.0;10.0;10.0;10.0;10.0;110.0;70.0;110.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>16</x>
      <y>656</y>
      <w>72</w>
      <h>104</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>70.0;10.0;10.0;10.0;10.0;110.0;70.0;110.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>16</x>
      <y>816</y>
      <w>72</w>
      <h>104</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>70.0;10.0;10.0;10.0;10.0;110.0;70.0;110.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1768</x>
      <y>216</y>
      <w>264</w>
      <h>88</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;90.0;50.0;10.0;310.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2384</x>
      <y>264</y>
      <w>72</w>
      <h>104</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;70.0;10.0;70.0;110.0;10.0;110.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2384</x>
      <y>424</y>
      <w>72</w>
      <h>104</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;70.0;10.0;70.0;110.0;10.0;110.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2384</x>
      <y>584</y>
      <w>72</w>
      <h>104</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;70.0;10.0;70.0;110.0;10.0;110.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2384</x>
      <y>744</y>
      <w>72</w>
      <h>104</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;70.0;10.0;70.0;110.0;10.0;110.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1096</x>
      <y>480</y>
      <w>160</w>
      <h>128</h>
    </coordinates>
    <panel_attributes>bg=light_gray
&lt;&lt;enumeration&gt;&gt;
*Song*
--
SINGLE_CHORD(100)
GAZ_SECTOR(500)
SMELLS_LIKE(1000)
JAZZ(2500)
BAXA(5000)
















</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>752</x>
      <y>1576</y>
      <w>336</w>
      <h>32</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;20.0;400.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1336</x>
      <y>480</y>
      <w>152</w>
      <h>128</h>
    </coordinates>
    <panel_attributes>bg=light_gray
&lt;&lt;enumeration&gt;&gt;
*WebTask*
--
ACCOUNT_BOOST(100)
PUBLIC_PR(500)
MAKE_FRONTEND(2000)
VIDEO_EDITING(5000)
MAKE_A_GAME(15000)
















</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1408</x>
      <y>600</y>
      <w>24</w>
      <h>80</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;80.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1168</x>
      <y>600</y>
      <w>24</w>
      <h>80</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;80.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>872</x>
      <y>480</y>
      <w>216</w>
      <h>200</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-
state</panel_attributes>
    <additional_attributes>250.0;230.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1512</x>
      <y>440</y>
      <w>88</w>
      <h>240</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-
state</panel_attributes>
    <additional_attributes>10.0;280.0;90.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1408</x>
      <y>1664</y>
      <w>112</w>
      <h>128</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-
state</panel_attributes>
    <additional_attributes>10.0;10.0;120.0;140.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2040</x>
      <y>1744</y>
      <w>376</w>
      <h>144</h>
    </coordinates>
    <panel_attributes>bg=light_gray
*MacbookState*
--
#price: int = 200000
#available_courses: List&lt; Kclass&lt;*&gt; &gt;
#possible_achievement: PurchaseAchievements

-
+getPrice(): int
+getAchievement(): PurchaseAchievements

+changeState(bag: Player.Bag)
+isAvailable(course: Kclass&lt;*&gt;): boolean
















</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2040</x>
      <y>1440</y>
      <w>376</w>
      <h>144</h>
    </coordinates>
    <panel_attributes>bg=light_gray
*UsualComputerState*
--
#price: int = 30000
#available_courses: List&lt; Kclass&lt;*&gt; &gt;
#possible_achievement: PurchaseAchievements

-
+getPrice(): int
+getAchievement(): PurchaseAchievements

+changeState(bag: Player.Bag)
+isAvailable(course: Kclass&lt;*&gt;): boolean

















</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2040</x>
      <y>1592</y>
      <w>376</w>
      <h>144</h>
    </coordinates>
    <panel_attributes>bg=light_gray
*XiaomiMiNotebookState*
--
#price: int = 60000
#available_courses: List&lt; Kclass&lt;*&gt; &gt;
#possible_achievement: PurchaseAchievements

-
+getPrice(): int
+getAchievement(): PurchaseAchievements

+changeState(bag: Player.Bag)
+isAvailable(course: Kclass&lt;*&gt;): boolean















</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2040</x>
      <y>1288</y>
      <w>376</w>
      <h>144</h>
    </coordinates>
    <panel_attributes>bg=light_gray
*OldComputerState*
--
#price: int = 10000
#available_courses: List&lt; Kclass&lt;*&gt; &gt;
#possible_achievement: PurchaseAchievements

-
+getPrice(): int
+getAchievement(): PurchaseAchievements

+changeState(bag: Player.Bag)
+isAvailable(course: Kclass&lt;*&gt;): boolean















</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2040</x>
      <y>1136</y>
      <w>376</w>
      <h>144</h>
    </coordinates>
    <panel_attributes>bg=light_gray
*PreviouslyUsedComputerState*
--
#price: int = 3000
#available_courses: List&lt; Kclass&lt;*&gt; &gt;
#possible_achievement: PurchaseAchievements

-
+getPrice(): int
+getAchievement(): PurchaseAchievements

+changeState(bag: Player.Bag)
+isAvailable(course: Kclass&lt;*&gt;): boolean

















</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2040</x>
      <y>984</y>
      <w>376</w>
      <h>144</h>
    </coordinates>
    <panel_attributes>bg=light_gray
/*NullComputerState*/
--
#price: int = 0
#available_courses: List&lt; Kclass&lt;*&gt; &gt;
#possible_achievement: PurchaseAchievements

-
+getPrice(): int
+getAchievement(): PurchaseAchievements

+changeState(bag: Player.Bag)
+isAvailable(course: Kclass&lt;*&gt;): boolean
















</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1592</x>
      <y>976</y>
      <w>376</w>
      <h>216</h>
    </coordinates>
    <panel_attributes>bg=orange
&lt;&lt;abstract class&gt;&gt;
/*ComputerState*/
--
#price: int
#available_courses: List&lt; Kclass&lt;*&gt; &gt;
#possible_achievement: PurchaseAchievements

-
+getPrice(): int
+getAchievement(): PurchaseAchievements

+changeState(bag: Player.Bag)
+isAvailable(course: Kclass&lt;*&gt;): boolean

--
*Responsibilities*
-- Предоставить абстракцию для системного
контроля компьютеров и их возможностей.















</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1960</x>
      <y>1072</y>
      <w>96</w>
      <h>24</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;100.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2408</x>
      <y>1088</y>
      <w>80</w>
      <h>104</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;80.0;10.0;80.0;110.0;10.0;110.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2408</x>
      <y>1200</y>
      <w>80</w>
      <h>128</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;80.0;10.0;80.0;140.0;10.0;140.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2408</x>
      <y>1336</y>
      <w>80</w>
      <h>144</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;80.0;10.0;80.0;160.0;10.0;160.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2408</x>
      <y>1488</y>
      <w>80</w>
      <h>144</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;80.0;10.0;80.0;160.0;10.0;160.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2408</x>
      <y>1648</y>
      <w>80</w>
      <h>136</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;80.0;10.0;80.0;150.0;10.0;150.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1512</x>
      <y>1064</y>
      <w>96</w>
      <h>32</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-
state</panel_attributes>
    <additional_attributes>10.0;20.0;100.0;20.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>496</x>
      <y>1304</y>
      <w>480</w>
      <h>216</h>
    </coordinates>
    <panel_attributes>bg=orange
&lt;&lt;abstract class&gt;&gt;
/*GuitarState*/
--
#price: int
#available_courses: List&lt; Kclass&lt;*&gt; &gt;
#possible_achievement: PurchaseAchievements

-
+getPrice(): int
+getAchievement(): PurchaseAchievements

+changeState(bag: Player.Bag)
+isAvailable(course: Kclass&lt;*&gt;): boolean

--
*Responsibilities*
-- Предоставить абстракцию для системного
контроля гитар и их возможностей.















</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>80</x>
      <y>1672</y>
      <w>368</w>
      <h>144</h>
    </coordinates>
    <panel_attributes>bg=light_gray
*UssrGuitarState*
--
#price: int = 1000
#available_courses: List&lt; Kclass&lt;*&gt; &gt;
#possible_achievement: PurchaseAchievements

-
+getPrice(): int
+getAchievement(): PurchaseAchievements

+changeState(bag: Player.Bag)
+isAvailable(course: Kclass&lt;*&gt;): boolean














</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>80</x>
      <y>1064</y>
      <w>368</w>
      <h>144</h>
    </coordinates>
    <panel_attributes>bg=light_gray
*DualNeckGuitarState*
--
#price: int = 150000
#available_courses: List&lt; Kclass&lt;*&gt; &gt;
#possible_achievement: PurchaseAchievements

-
+getPrice(): int
+getAchievement(): PurchaseAchievements

+changeState(bag: Player.Bag)
+isAvailable(course: Kclass&lt;*&gt;): boolean













</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>80</x>
      <y>1520</y>
      <w>368</w>
      <h>144</h>
    </coordinates>
    <panel_attributes>bg=light_gray
*UralGuitarState*
--
#price: int = 5000
#available_courses: List&lt; Kclass&lt;*&gt; &gt;
#possible_achievement: PurchaseAchievements

-
+getPrice(): int
+getAchievement(): PurchaseAchievements

+changeState(bag: Player.Bag)
+isAvailable(course: Kclass&lt;*&gt;): boolean













</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>80</x>
      <y>1216</y>
      <w>368</w>
      <h>144</h>
    </coordinates>
    <panel_attributes>bg=light_gray
*FenderGuitarState*
--
#price: int = 40000
#available_courses: List&lt; Kclass&lt;*&gt; &gt;
#possible_achievement: PurchaseAchievements

-
+getPrice(): int
+getAchievement(): PurchaseAchievements

+changeState(bag: Player.Bag)
+isAvailable(course: Kclass&lt;*&gt;): boolean














</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>80</x>
      <y>1368</y>
      <w>368</w>
      <h>144</h>
    </coordinates>
    <panel_attributes>bg=light_gray
*YamahaGuitarState*
--
#price: int = 12000
#available_courses: List&lt; Kclass&lt;*&gt; &gt;
#possible_achievement: PurchaseAchievements

-
+getPrice(): int
+getAchievement(): PurchaseAchievements

+changeState(bag: Player.Bag)
+isAvailable(course: Kclass&lt;*&gt;): boolean











</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>440</x>
      <y>1512</y>
      <w>312</w>
      <h>384</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>370.0;10.0;180.0;120.0;10.0;460.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>80</x>
      <y>1824</y>
      <w>368</w>
      <h>144</h>
    </coordinates>
    <panel_attributes>bg=light_gray
*NullGuitarState*
--
#price: int = 0
#available_courses: List&lt; Kclass&lt;*&gt; &gt;
#possible_achievement: PurchaseAchievements

-
+getPrice(): int
+getAchievement(): PurchaseAchievements

+changeState(bag: Player.Bag)
+isAvailable(course: Kclass&lt;*&gt;): boolean












</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>0</x>
      <y>1736</y>
      <w>96</w>
      <h>128</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>100.0;140.0;10.0;140.0;10.0;10.0;100.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>0</x>
      <y>1584</y>
      <w>96</w>
      <h>128</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>100.0;140.0;10.0;140.0;10.0;10.0;100.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>0</x>
      <y>1432</y>
      <w>96</w>
      <h>128</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>100.0;140.0;10.0;140.0;10.0;10.0;100.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>0</x>
      <y>1280</y>
      <w>96</w>
      <h>128</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>100.0;140.0;10.0;140.0;10.0;10.0;100.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>0</x>
      <y>1128</y>
      <w>96</w>
      <h>120</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>100.0;130.0;10.0;130.0;10.0;10.0;100.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>512</x>
      <y>1016</y>
      <w>440</w>
      <h>256</h>
    </coordinates>
    <panel_attributes>*Note*
bg=blue
Способ реализации допустимых курсов для каждой гитары:

available_courses - лист с названиями курсов(имен
классов функций), которые становятся возможными к
изучению после приобретения данного предмета (изменения
состояния предмета guitar).

available_courses - ОБЪЯВЛЕННЫЙ по дефолту лист.

-
П.С. по схожему принципу реализуются доставки(допустимые 
для существующей модели велосипеда) и работы(допустимые
для существующей модели компьютера).</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>968</x>
      <y>1360</y>
      <w>120</w>
      <h>64</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-
state</panel_attributes>
    <additional_attributes>130.0;10.0;10.0;60.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>416</x>
      <y>2120</y>
      <w>456</w>
      <h>144</h>
    </coordinates>
    <panel_attributes>bg=light_gray
*UsualBicycleState*
--
#price: int = 10000
#available_delivery: List&lt;Delivery&gt;
#possible_achievement: PurchaseAchievements

-
+getPrice(): int
+getAchievement(): PurchaseAchievements

+changeState(bag: Player.Bag)
+isAvailable(delivery: Delivery): bool













</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>752</x>
      <y>2288</y>
      <w>456</w>
      <h>128</h>
    </coordinates>
    <panel_attributes>bg=light_gray
*UssrBicycleState*
--
#price: int = 2000
#available_delivery: List&lt;Delivery&gt;
#possible_achievement: PurchaseAchievements

-
+getPrice(): int
+getAchievement(): PurchaseAchievements

+changeState(bag: Player.Bag)
+isAvailable(delivery: Delivery): bool













</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>168</x>
      <y>2288</y>
      <w>456</w>
      <h>128</h>
    </coordinates>
    <panel_attributes>bg=light_gray
*MountainBicycleState*
--
#price: int = 40000
#available_delivery: List&lt;Delivery&gt;
#possible_achievement: PurchaseAchievements

-
+getPrice(): int
+getAchievement(): PurchaseAchievements

+changeState(bag: Player.Bag)
+isAvailable(delivery: Delivery): bool















</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>912</x>
      <y>2120</y>
      <w>456</w>
      <h>144</h>
    </coordinates>
    <panel_attributes>bg=light_gray
/*NullBicycleState*/
--
#price: int = 0
#available_delivery: List&lt;Delivery&gt;
#possible_achievement: PurchaseAchievements

-
+getPrice(): int
+getAchievement(): PurchaseAchievements

+changeState(bag: Player.Bag)
+isAvailable(delivery: Delivery): bool












</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>680</x>
      <y>1880</y>
      <w>480</w>
      <h>216</h>
    </coordinates>
    <panel_attributes>bg=orange
&lt;&lt;abstract class&gt;&gt;
/*BicycleState*/
--
#price: int
#available_delivery: List&lt;Delivery&gt;
#possible_achievement: PurchaseAchievements

-
+getPrice(): int
+getAchievement(): PurchaseAchievements

+changeState(bag: Player.Bag)
+isAvailable(delivery: Delivery): bool

--
*Responsibilities*
-- Предоставить абстракцию для системного
контроля велосипедов и их возможностей.















</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>624</x>
      <y>1984</y>
      <w>72</w>
      <h>80</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>70.0;10.0;10.0;80.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>280</x>
      <y>1984</y>
      <w>352</w>
      <h>128</h>
    </coordinates>
    <panel_attributes>bg=light_gray
&lt;&lt;enumeration&gt;&gt;
*Delivery*
--
SLOW_DELIVERY(100)
USUAL_DELIVERY(500)
FAST_DELIVERY(5000)
















</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1200</x>
      <y>2256</y>
      <w>88</w>
      <h>96</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>90.0;10.0;90.0;100.0;10.0;100.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>672</x>
      <y>2256</y>
      <w>96</w>
      <h>96</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>100.0;100.0;10.0;100.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>320</x>
      <y>2152</y>
      <w>112</w>
      <h>152</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>120.0;10.0;10.0;10.0;10.0;170.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1048</x>
      <y>2088</y>
      <w>24</w>
      <h>48</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;40.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1112</x>
      <y>1664</y>
      <w>120</w>
      <h>232</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-
state</panel_attributes>
    <additional_attributes>130.0;10.0;10.0;270.0</additional_attributes>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>1584</x>
      <y>608</y>
      <w>392</w>
      <h>144</h>
    </coordinates>
    <panel_attributes>*Note*
bg=blue
Внутри метода buyNextItem() необходимо определить и 
реализовать достижения, которые происходят во время покупок.

Внутри метода changeState() класса предметов вызывается
handleRequest() из класса Player.AchievementRequestHandler

-
см. раздел "Ачивки" 
п. "Ачивки за приобретения"</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2016</x>
      <y>152</y>
      <w>376</w>
      <h>144</h>
    </coordinates>
    <panel_attributes>bg=light_gray
/*NullComputerCourseState*/
--
#price: int
#avalibale_web_tasks: List&lt;WebTask&gt;

-
+getPrice(): int

+buyNextCourse(courses: Player.Courses)
+isAvailable(task: WebTask): bool
+timerTickHandler()
+timerEndHandler()














</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1472</x>
      <y>1600</y>
      <w>136</w>
      <h>32</h>
    </coordinates>
    <panel_attributes>lt=[inside]&lt;-
</panel_attributes>
    <additional_attributes>30.0;20.0;150.0;20.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1472</x>
      <y>1448</y>
      <w>136</w>
      <h>32</h>
    </coordinates>
    <panel_attributes>lt=[inside]&lt;-
</panel_attributes>
    <additional_attributes>30.0;20.0;150.0;20.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1240</x>
      <y>1784</y>
      <w>192</w>
      <h>136</h>
    </coordinates>
    <panel_attributes>bg=light_gray
DataClass
/*Birthday*/
--
-day: Int = RandomInt(0,31)
-month: Int = RandomInt(0,12)
-year: Int = 2002
--

+getDay(): Int
+getMonth(): Int
+getYear(): Int














</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1592</x>
      <y>1560</y>
      <w>408</w>
      <h>184</h>
    </coordinates>
    <panel_attributes>bg=light_gray
/*Bag*/
--
-bicycle: BicycleState = NullBicycleState
-guitar: GuitarState = NullGuitarState
-computer: ComputerState = NullComputerState

--

+getBycycle(): BicycleState
+getGuitar(): GuitarState
+getComputer(): ComputerState

+setBycycle(bicycle: BicycleState)
+setGuitar(guitar: GuitarState)
+setComputer(computer: ComputerState)













</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1320</x>
      <y>1664</y>
      <w>24</w>
      <h>136</h>
    </coordinates>
    <panel_attributes>lt=&lt;.</panel_attributes>
    <additional_attributes>10.0;150.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>1592</x>
      <y>1216</y>
      <w>392</w>
      <h>144</h>
    </coordinates>
    <panel_attributes>*Note*
bg=blue
Комбинация методов и полей вида:

/-field: FieldType/
/+getField(): FieldType/
/+setField(new_value: FieldType)/

В ЯП Kotlin рекомендуется реализовывать с помощью публичного
поля с определённым set методом</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>1584</x>
      <y>792</y>
      <w>392</w>
      <h>144</h>
    </coordinates>
    <panel_attributes>*Note*
bg=blue
Комбинация методов и полей вида:

/#field: FieldType/
/+getField(): FieldType/

В ЯП Kotlin рекомендуется реализовывать с помощью публичного
поля с prviate set методом</panel_attributes>
    <additional_attributes/>
  </element>
</diagram>
